alias: Item Select to speak
description: Trigger Alexa from Item Select
trigger:
  entity_id: input_select.speak_list
  platform: state
condition:
  - condition: template
    value_template: '{{states.input_select.speak_list.state != "do not use"  }}'
action:
  - service_template: >
        {% set name = states('sensor.last_alexa').split('.') %}
        notify.alexa_media_{{name[-1]}}
    data_template:
      data:
        type: tts
      message: >
        {% set ns=namespace(speak = "") %}
        {% set ns.speak = states.input_select.speak_list.state %}
        {% for ps in range(1,10) if ns.speak.find(')') > -1 %}
          {% set dy = 
          {'opening': ('closed','open'),'window':('closed','open'),
          'door': ('closed','open'),'garage_door':('closed','open'),
          'lock':('locked','unlocked'),'presence':('home','away'),
          'connectivity':('connected','not connected'),
          'vibration':('detected','clear'),
          'smoke':('detected','clear'),'sound':('detected','clear'),
          'motion':('detected','clear'),'battery':('off','on'),
          'occupancy':('detected','clear')
          } %}      
          {% set bn = ns.speak.find('(') %}
          {% set ed = ns.speak.find(')')+1 %}
          {% set tn = ns.speak[bn:ed] %}
          {% set gr = ['Morning','Afternoon','Evening'] %}
          {% set hr = (now().hour/12)|int + (now().hour > 17)%}
          {% set td = now().strftime("%A, %d. %B %Y") %}
          {% set ti = now().strftime("%-I %M %p") %}  
          {% set et = state_attr("input_select.entity_list","options") %}
          {% set et = et[tn[2:4]|int] %}
          {% set fn = state_attr(et,"friendly_name") %}
          {% set st = states(et) %}
          {% set dt = state_attr(et,"device_class")|string %}
          {% if (dt != "None") and (st in ['off','on'])  %} 
            {% set st = dy[dt][st|int] %}
          {% endif %}
          {% set al = states[et]['attributes']|list %}
          {% set al = state_attr(et,al[tn[4:5]|int]) %}
          {% set um = state_attr(et,"unit_of_measurement") %}  
          {% set br = state_attr(et,"brightness")|int %}
          {% set bl = ((100*br/254)|int)|string %}
          {% set br = br|string %} 
          {% set rp = "" %}
          {% if tn == "(gr)" %}
            {% set rp = gr[hr] %}
          {% elif tn == "(tt)" %}
            {% set rp = ti %}
          {% elif tn == "(td)" %}
            {% set rp = td %}
          {% endif %}
          {% if tn|regex_search('\(e..f\)')%}
            {% set rp = fn %}
          {% elif tn|regex_search('\(e..s\)') %}
            {% set rp = st ~ " " ~ um %}
            {% set rp = rp.replace('None','') %}
          {% elif tn|regex_search('\(e..\$\)') %}
            {% set rp = st %}
          {% elif tn|regex_search('\(e..b\)')%}
            {% set rp = bl %}
          {% elif tn|regex_search('\(e..B\)')%}
            {% set rp = br %}
          {% elif tn|regex_search('\(e..[0-9]\)') %}
            {% set rp = al %}
          {% endif %}
          {% set ns.speak = ns.speak.replace(tn,rp) %}  
        {%endfor%}
        {{ns.speak}}
  - service: input_select.select_option
    data:
      entity_id: input_select.speak_list
      option: "do not use"